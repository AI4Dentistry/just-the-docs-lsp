// Media query

// Media query mixin
// Usage:
// @include mq(md) {
//   ..medium and up styles
// }
@mixin mq($name) {
  // Retrieves the value from the key
  $value: map-get($media-queries, $name);

  // If the key exists in the map
  @if $value != null {
    // Prints a media query based on the value
    @media (min-width: $value) {
      @content;
    }
  } @else {
    @warn "No value could be retrieved from `#{$media-query}`. "
      + "Please make sure it is defined in `$media-queries` map.";
  }
}

// Responsive container

@mixin container {
  padding-right: $gutter-spacing-sm;
  padding-left: $gutter-spacing-sm;
  max-width:$content-width;
  margin-left:auto;
  margin-right:auto;

  @include mq(sm) {
    padding-right: $gutter-spacing;
    padding-left: $gutter-spacing;
  }
  @include mq(lg) {
    padding-right: $gutter-spacing-lg;
    padding-left: $gutter-spacing-lg;
  }
  @include mq(xl) {
    padding-right: $gutter-spacing-xl;
    padding-left: $gutter-spacing-xl;
  }
  @include mq(xxl) {
    padding-right: $gutter-spacing-xxl;
    padding-left: $gutter-spacing-xxl;
  }
  @include mq(xxxl) {
    max-width:$content-width-xxxl;
    padding-right: $gutter-spacing-xxxl;
    padding-left: $gutter-spacing-xxxl;
    margin-left:0;
    margin-right:0;
  }

}

// Separator bar

@mixin separator($topMargin: 3rem, $bottomMargin: 3rem) {
  &:before {
    content:"";
    display:block;
    width:120px;
    height:2px;
    background-color: $separator-color;
    margin-top:$topMargin;
    margin-bottom:$bottomMargin;
  }
}


// ------------------------------------------------------------------
// Basic flex grid mixin
// ------------------------------------------------------------------

// For setting up a flex-based grid.  This mixin should be included
// in the container definition of the grid.  A default gutter value 
// will be used if none is provided.
//
//  Usage:
//  .parent-element {
//      @include flex-grid(3);   // Generates a 3 column grid, using default gutter
//  }


@mixin flex-grid($numColumns, $gutterWidth: 30px) {
  display:flex;
  flex-wrap:wrap;
  flex-direction:row;

  > * {
      flex-grow:0;
      flex-shrink:1;
      flex-basis: calc((100% - #{($gutterWidth * ($numColumns - 1) + .1)}) / #{$numColumns});
      margin-right:$gutterWidth;
      margin-left:0;
  
      &:nth-child(1n) {
          // Clear out our previous right margin settings
          margin-right:$gutterWidth;
      }
      &:nth-child(#{$numColumns}n+#{$numColumns}) {
          margin-right:0;
      }
  }
}
